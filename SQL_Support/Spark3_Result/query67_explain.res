Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark Web UI available at http://mac.lan:4040
Spark master: local[*], Application Id: local-1741582132565
== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['i_category ASC NULLS FIRST, 'i_class ASC NULLS FIRST, 'i_brand ASC NULLS FIRST, 'i_product_name ASC NULLS FIRST, 'd_year ASC NULLS FIRST, 'd_qoy ASC NULLS FIRST, 'd_moy ASC NULLS FIRST, 's_store_id ASC NULLS FIRST, 'sumsales ASC NULLS FIRST, 'rk ASC NULLS FIRST], true
      +- 'Project [*]
         +- 'Filter ('rk <= 100)
            +- 'SubqueryAlias dw2
               +- 'Project ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id, 'sumsales, 'rank() windowspecdefinition('i_category, 'sumsales DESC NULLS LAST, unspecifiedframe$()) AS rk#1]
                  +- 'SubqueryAlias dw1
                     +- 'Aggregate [rollup(Vector(0), Vector(1), Vector(2), Vector(3), Vector(4), Vector(5), Vector(6), Vector(7), 'i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id)], ['i_category, 'i_class, 'i_brand, 'i_product_name, 'd_year, 'd_qoy, 'd_moy, 's_store_id, 'sum('coalesce(('ss_sales_price * 'ss_quantity), 0)) AS sumsales#0]
                        +- 'Filter ((('ss_sold_date_sk = 'd_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND (('ss_store_sk = 's_store_sk) AND (('d_month_seq >= 1200) AND ('d_month_seq <= (1200 + 11)))))
                           +- 'Join Inner
                              :- 'Join Inner
                              :  :- 'Join Inner
                              :  :  :- 'UnresolvedRelation [store_sales], [], false
                              :  :  +- 'UnresolvedRelation [date_dim], [], false
                              :  +- 'UnresolvedRelation [store], [], false
                              +- 'UnresolvedRelation [item], [], false

== Analyzed Logical Plan ==
i_category: string, i_class: string, i_brand: string, i_product_name: string, d_year: int, d_qoy: int, d_moy: int, s_store_id: string, sumsales: double, rk: int
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#125 ASC NULLS FIRST, i_class#126 ASC NULLS FIRST, i_brand#127 ASC NULLS FIRST, i_product_name#128 ASC NULLS FIRST, d_year#129 ASC NULLS FIRST, d_qoy#130 ASC NULLS FIRST, d_moy#131 ASC NULLS FIRST, s_store_id#132 ASC NULLS FIRST, sumsales#0 ASC NULLS FIRST, rk#1 ASC NULLS FIRST], true
      +- Project [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sumsales#0, rk#1]
         +- Filter (rk#1 <= 100)
            +- SubqueryAlias dw2
               +- Project [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sumsales#0, rk#1]
                  +- Project [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sumsales#0, rk#1, rk#1]
                     +- Window [rank(sumsales#0) windowspecdefinition(i_category#125, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#1], [i_category#125], [sumsales#0 DESC NULLS LAST]
                        +- Project [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sumsales#0]
                           +- SubqueryAlias dw1
                              +- Aggregate [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L], [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sum(coalesce((ss_sales_price#22 * cast(ss_quantity#19 as double)), cast(0 as double))) AS sumsales#0]
                                 +- Expand [[ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields]], [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 87 more fields]
                                    +- Project [ss_sold_date_sk#9, ss_sold_time_sk#10, ss_item_sk#11, ss_customer_sk#12, ss_cdemo_sk#13, ss_hdemo_sk#14, ss_addr_sk#15, ss_store_sk#16, ss_promo_sk#17, ss_ticket_number#18, ss_quantity#19, ss_wholesale_cost#20, ss_list_price#21, ss_sales_price#22, ss_ext_discount_amt#23, ss_ext_sales_price#24, ss_ext_wholesale_cost#25, ss_ext_list_price#26, ss_ext_tax#27, ss_coupon_amt#28, ss_net_paid#29, ss_net_paid_inc_tax#30, ss_net_profit#31, d_date_sk#32, ... 86 more fields]
                                       +- Filter (((ss_sold_date_sk#9 = d_date_sk#32) AND (ss_item_sk#11 = i_item_sk#89)) AND ((ss_store_sk#16 = s_store_sk#60) AND ((d_month_seq#35 >= 1200) AND (d_month_seq#35 <= (1200 + 11)))))
                                          +- Join Inner
                                             :- Join Inner
                                             :  :- Join Inner
                                             :  :  :- SubqueryAlias spark_catalog.tpcds.store_sales
                                             :  :  :  +- Relation spark_catalog.tpcds.store_sales[ss_sold_date_sk#9,ss_sold_time_sk#10,ss_item_sk#11,ss_customer_sk#12,ss_cdemo_sk#13,ss_hdemo_sk#14,ss_addr_sk#15,ss_store_sk#16,ss_promo_sk#17,ss_ticket_number#18,ss_quantity#19,ss_wholesale_cost#20,ss_list_price#21,ss_sales_price#22,ss_ext_discount_amt#23,ss_ext_sales_price#24,ss_ext_wholesale_cost#25,ss_ext_list_price#26,ss_ext_tax#27,ss_coupon_amt#28,ss_net_paid#29,ss_net_paid_inc_tax#30,ss_net_profit#31] parquet
                                             :  :  +- SubqueryAlias spark_catalog.tpcds.date_dim
                                             :  :     +- Relation spark_catalog.tpcds.date_dim[d_date_sk#32,d_date_id#33,d_date#34,d_month_seq#35,d_week_seq#36,d_quarter_seq#37,d_year#38,d_dow#39,d_moy#40,d_dom#41,d_qoy#42,d_fy_year#43,d_fy_quarter_seq#44,d_fy_week_seq#45,d_day_name#46,d_quarter_name#47,d_holiday#48,d_weekend#49,d_following_holiday#50,d_first_dom#51,d_last_dom#52,d_same_day_ly#53,d_same_day_lq#54,d_current_day#55,... 4 more fields] parquet
                                             :  +- SubqueryAlias spark_catalog.tpcds.store
                                             :     +- Relation spark_catalog.tpcds.store[s_store_sk#60,s_store_id#61,s_rec_start_date#62,s_rec_end_date#63,s_closed_date_sk#64,s_store_name#65,s_number_employees#66,s_floor_space#67,s_hours#68,s_manager#69,s_market_id#70,s_geography_class#71,s_market_desc#72,s_market_manager#73,s_division_id#74,s_division_name#75,s_company_id#76,s_company_name#77,s_street_number#78,s_street_name#79,s_street_type#80,s_suite_number#81,s_city#82,s_county#83,... 5 more fields] parquet
                                             +- SubqueryAlias spark_catalog.tpcds.item
                                                +- Relation spark_catalog.tpcds.item[i_item_sk#89,i_item_id#90,i_rec_start_date#91,i_rec_end_date#92,i_item_desc#93,i_current_price#94,i_wholesale_cost#95,i_brand_id#96,i_brand#97,i_class_id#98,i_class#99,i_category_id#100,i_category#101,i_manufact_id#102,i_manufact#103,i_size#104,i_formulation#105,i_color#106,i_units#107,i_container#108,i_manager_id#109,i_product_name#110] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_category#125 ASC NULLS FIRST, i_class#126 ASC NULLS FIRST, i_brand#127 ASC NULLS FIRST, i_product_name#128 ASC NULLS FIRST, d_year#129 ASC NULLS FIRST, d_qoy#130 ASC NULLS FIRST, d_moy#131 ASC NULLS FIRST, s_store_id#132 ASC NULLS FIRST, sumsales#0 ASC NULLS FIRST, rk#1 ASC NULLS FIRST], true
      +- Filter (rk#1 <= 100)
         +- Window [rank(sumsales#0) windowspecdefinition(i_category#125, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#1], [i_category#125], [sumsales#0 DESC NULLS LAST]
            +- WindowGroupLimit [i_category#125], [sumsales#0 DESC NULLS LAST], rank(sumsales#0), 100
               +- Aggregate [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L], [i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sum(coalesce((ss_sales_price#22 * cast(ss_quantity#19 as double)), 0.0)) AS sumsales#0]
                  +- Expand [[ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, s_store_id#61, 0], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, null, 1], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, null, null, 3], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, null, null, null, 7], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, null, null, null, null, 15], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, null, null, null, null, null, 31], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, null, null, null, null, null, null, 63], [ss_quantity#19, ss_sales_price#22, i_category#101, null, null, null, null, null, null, null, 127], [ss_quantity#19, ss_sales_price#22, null, null, null, null, null, null, null, null, 255]], [ss_quantity#19, ss_sales_price#22, i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L]
                     +- Project [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, s_store_id#61]
                        +- Join Inner, (ss_item_sk#11 = i_item_sk#89)
                           :- Project [ss_item_sk#11, ss_quantity#19, ss_sales_price#22, d_year#38, d_moy#40, d_qoy#42, s_store_id#61]
                           :  +- Join Inner, (ss_store_sk#16 = s_store_sk#60)
                           :     :- Project [ss_item_sk#11, ss_store_sk#16, ss_quantity#19, ss_sales_price#22, d_year#38, d_moy#40, d_qoy#42]
                           :     :  +- Join Inner, (ss_sold_date_sk#9 = d_date_sk#32)
                           :     :     :- Project [ss_sold_date_sk#9, ss_item_sk#11, ss_store_sk#16, ss_quantity#19, ss_sales_price#22]
                           :     :     :  +- Filter (isnotnull(ss_sold_date_sk#9) AND (isnotnull(ss_store_sk#16) AND isnotnull(ss_item_sk#11)))
                           :     :     :     +- Relation spark_catalog.tpcds.store_sales[ss_sold_date_sk#9,ss_sold_time_sk#10,ss_item_sk#11,ss_customer_sk#12,ss_cdemo_sk#13,ss_hdemo_sk#14,ss_addr_sk#15,ss_store_sk#16,ss_promo_sk#17,ss_ticket_number#18,ss_quantity#19,ss_wholesale_cost#20,ss_list_price#21,ss_sales_price#22,ss_ext_discount_amt#23,ss_ext_sales_price#24,ss_ext_wholesale_cost#25,ss_ext_list_price#26,ss_ext_tax#27,ss_coupon_amt#28,ss_net_paid#29,ss_net_paid_inc_tax#30,ss_net_profit#31] parquet
                           :     :     +- Project [d_date_sk#32, d_year#38, d_moy#40, d_qoy#42]
                           :     :        +- Filter ((isnotnull(d_month_seq#35) AND ((d_month_seq#35 >= 1200) AND (d_month_seq#35 <= 1211))) AND isnotnull(d_date_sk#32))
                           :     :           +- Relation spark_catalog.tpcds.date_dim[d_date_sk#32,d_date_id#33,d_date#34,d_month_seq#35,d_week_seq#36,d_quarter_seq#37,d_year#38,d_dow#39,d_moy#40,d_dom#41,d_qoy#42,d_fy_year#43,d_fy_quarter_seq#44,d_fy_week_seq#45,d_day_name#46,d_quarter_name#47,d_holiday#48,d_weekend#49,d_following_holiday#50,d_first_dom#51,d_last_dom#52,d_same_day_ly#53,d_same_day_lq#54,d_current_day#55,... 4 more fields] parquet
                           :     +- Project [s_store_sk#60, s_store_id#61]
                           :        +- Filter isnotnull(s_store_sk#60)
                           :           +- Relation spark_catalog.tpcds.store[s_store_sk#60,s_store_id#61,s_rec_start_date#62,s_rec_end_date#63,s_closed_date_sk#64,s_store_name#65,s_number_employees#66,s_floor_space#67,s_hours#68,s_manager#69,s_market_id#70,s_geography_class#71,s_market_desc#72,s_market_manager#73,s_division_id#74,s_division_name#75,s_company_id#76,s_company_name#77,s_street_number#78,s_street_name#79,s_street_type#80,s_suite_number#81,s_city#82,s_county#83,... 5 more fields] parquet
                           +- Project [i_item_sk#89, i_brand#97, i_class#99, i_category#101, i_product_name#110]
                              +- Filter isnotnull(i_item_sk#89)
                                 +- Relation spark_catalog.tpcds.item[i_item_sk#89,i_item_id#90,i_rec_start_date#91,i_rec_end_date#92,i_item_desc#93,i_current_price#94,i_wholesale_cost#95,i_brand_id#96,i_brand#97,i_class_id#98,i_class#99,i_category_id#100,i_category#101,i_manufact_id#102,i_manufact#103,i_size#104,i_formulation#105,i_color#106,i_units#107,i_container#108,i_manager_id#109,i_product_name#110] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_category#125 ASC NULLS FIRST,i_class#126 ASC NULLS FIRST,i_brand#127 ASC NULLS FIRST,i_product_name#128 ASC NULLS FIRST,d_year#129 ASC NULLS FIRST,d_qoy#130 ASC NULLS FIRST,d_moy#131 ASC NULLS FIRST,s_store_id#132 ASC NULLS FIRST,sumsales#0 ASC NULLS FIRST,rk#1 ASC NULLS FIRST], output=[i_category#125,i_class#126,i_brand#127,i_product_name#128,d_year#129,d_qoy#130,d_moy#131,s_store_id#132,sumsales#0,rk#1])
   +- Filter (rk#1 <= 100)
      +- Window [rank(sumsales#0) windowspecdefinition(i_category#125, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#1], [i_category#125], [sumsales#0 DESC NULLS LAST]
         +- WindowGroupLimit [i_category#125], [sumsales#0 DESC NULLS LAST], rank(sumsales#0), 100, Final
            +- Sort [i_category#125 ASC NULLS FIRST, sumsales#0 DESC NULLS LAST], false, 0
               +- Exchange hashpartitioning(i_category#125, 200), ENSURE_REQUIREMENTS, [plan_id=125]
                  +- WindowGroupLimit [i_category#125], [sumsales#0 DESC NULLS LAST], rank(sumsales#0), 100, Partial
                     +- Sort [i_category#125 ASC NULLS FIRST, sumsales#0 DESC NULLS LAST], false, 0
                        +- HashAggregate(keys=[i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L], functions=[sum(coalesce((ss_sales_price#22 * cast(ss_quantity#19 as double)), 0.0))], output=[i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, sumsales#0])
                           +- Exchange hashpartitioning(i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L, 200), ENSURE_REQUIREMENTS, [plan_id=119]
                              +- HashAggregate(keys=[i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L], functions=[partial_sum(coalesce((ss_sales_price#22 * cast(ss_quantity#19 as double)), 0.0))], output=[i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L, sum#140])
                                 +- Expand [[ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, s_store_id#61, 0], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, null, 1], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, null, null, 3], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, null, null, null, 7], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, null, null, null, null, 15], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, null, null, null, null, null, 31], [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, null, null, null, null, null, null, 63], [ss_quantity#19, ss_sales_price#22, i_category#101, null, null, null, null, null, null, null, 127], [ss_quantity#19, ss_sales_price#22, null, null, null, null, null, null, null, null, 255]], [ss_quantity#19, ss_sales_price#22, i_category#125, i_class#126, i_brand#127, i_product_name#128, d_year#129, d_qoy#130, d_moy#131, s_store_id#132, spark_grouping_id#124L]
                                    +- Project [ss_quantity#19, ss_sales_price#22, i_category#101, i_class#99, i_brand#97, i_product_name#110, d_year#38, d_qoy#42, d_moy#40, s_store_id#61]
                                       +- BroadcastHashJoin [ss_item_sk#11], [i_item_sk#89], Inner, BuildRight, false
                                          :- Project [ss_item_sk#11, ss_quantity#19, ss_sales_price#22, d_year#38, d_moy#40, d_qoy#42, s_store_id#61]
                                          :  +- BroadcastHashJoin [ss_store_sk#16], [s_store_sk#60], Inner, BuildRight, false
                                          :     :- Project [ss_item_sk#11, ss_store_sk#16, ss_quantity#19, ss_sales_price#22, d_year#38, d_moy#40, d_qoy#42]
                                          :     :  +- BroadcastHashJoin [ss_sold_date_sk#9], [d_date_sk#32], Inner, BuildRight, false
                                          :     :     :- Filter ((isnotnull(ss_sold_date_sk#9) AND isnotnull(ss_store_sk#16)) AND isnotnull(ss_item_sk#11))
                                          :     :     :  +- FileScan parquet spark_catalog.tpcds.store_sales[ss_sold_date_sk#9,ss_item_sk#11,ss_store_sk#16,ss_quantity#19,ss_sales_price#22] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9), isnotnull(ss_store_sk#16), isnotnull(ss_item_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:double>
                                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105]
                                          :     :        +- Project [d_date_sk#32, d_year#38, d_moy#40, d_qoy#42]
                                          :     :           +- Filter (((isnotnull(d_month_seq#35) AND (d_month_seq#35 >= 1200)) AND (d_month_seq#35 <= 1211)) AND isnotnull(d_date_sk#32))
                                          :     :              +- FileScan parquet spark_catalog.tpcds.date_dim[d_date_sk#32,d_month_seq#35,d_year#38,d_moy#40,d_qoy#42] Batched: true, DataFilters: [isnotnull(d_month_seq#35), (d_month_seq#35 >= 1200), (d_month_seq#35 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=109]
                                          :        +- Filter isnotnull(s_store_sk#60)
                                          :           +- FileScan parquet spark_catalog.tpcds.store[s_store_sk#60,s_store_id#61] Batched: true, DataFilters: [isnotnull(s_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=113]
                                             +- Filter isnotnull(i_item_sk#89)
                                                +- FileScan parquet spark_catalog.tpcds.item[i_item_sk#89,i_brand#97,i_class#99,i_category#101,i_product_name#110] Batched: true, DataFilters: [isnotnull(i_item_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

Time taken: 2.638 seconds, Fetched 1 row(s)
