Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark Web UI available at http://mac.lan:4040
Spark master: local[*], Application Id: local-1741582092511
== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['w_warehouse_name ASC NULLS FIRST], true
      +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'ship_carriers, 'year, 'sum('jan_sales) AS jan_sales#52, 'sum('feb_sales) AS feb_sales#53, 'sum('mar_sales) AS mar_sales#54, 'sum('apr_sales) AS apr_sales#55, 'sum('may_sales) AS may_sales#56, 'sum('jun_sales) AS jun_sales#57, 'sum('jul_sales) AS jul_sales#58, 'sum('aug_sales) AS aug_sales#59, 'sum('sep_sales) AS sep_sales#60, 'sum('oct_sales) AS oct_sales#61, 'sum('nov_sales) AS nov_sales#62, 'sum('dec_sales) AS dec_sales#63, 'sum(('jan_sales / 'w_warehouse_sq_ft)) AS jan_sales_per_sq_foot#64, 'sum(('feb_sales / 'w_warehouse_sq_ft)) AS feb_sales_per_sq_foot#65, 'sum(('mar_sales / 'w_warehouse_sq_ft)) AS mar_sales_per_sq_foot#66, 'sum(('apr_sales / 'w_warehouse_sq_ft)) AS apr_sales_per_sq_foot#67, ... 20 more fields]
         +- 'SubqueryAlias x
            +- 'Union false, false
               :- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#0, 'd_year AS year#1, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jan_sales#2, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS feb_sales#3, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS mar_sales#4, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS apr_sales#5, 'sum(CASE WHEN ('d_moy = 5) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS may_sales#6, 'sum(CASE WHEN ('d_moy = 6) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jun_sales#7, 'sum(CASE WHEN ('d_moy = 7) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS jul_sales#8, 'sum(CASE WHEN ('d_moy = 8) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS aug_sales#9, 'sum(CASE WHEN ('d_moy = 9) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS sep_sales#10, 'sum(CASE WHEN ('d_moy = 10) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS oct_sales#11, 'sum(CASE WHEN ('d_moy = 11) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS nov_sales#12, 'sum(CASE WHEN ('d_moy = 12) THEN ('ws_ext_sales_price * 'ws_quantity) ELSE 0 END) AS dec_sales#13, 'sum(CASE WHEN ('d_moy = 1) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS jan_net#14, 'sum(CASE WHEN ('d_moy = 2) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS feb_net#15, 'sum(CASE WHEN ('d_moy = 3) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS mar_net#16, 'sum(CASE WHEN ('d_moy = 4) THEN ('ws_net_paid * 'ws_quantity) ELSE 0 END) AS apr_net#17, ... 8 more fields]
               :  +- 'Filter (((('ws_warehouse_sk = 'w_warehouse_sk) AND ('ws_sold_date_sk = 'd_date_sk)) AND (('ws_sold_time_sk = 't_time_sk) AND ('ws_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
               :     +- 'Join Inner
               :        :- 'Join Inner
               :        :  :- 'Join Inner
               :        :  :  :- 'Join Inner
               :        :  :  :  :- 'UnresolvedRelation [web_sales], [], false
               :        :  :  :  +- 'UnresolvedRelation [warehouse], [], false
               :        :  :  +- 'UnresolvedRelation [date_dim], [], false
               :        :  +- 'UnresolvedRelation [time_dim], [], false
               :        +- 'UnresolvedRelation [ship_mode], [], false
               +- 'Aggregate ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'd_year], ['w_warehouse_name, 'w_warehouse_sq_ft, 'w_city, 'w_county, 'w_state, 'w_country, 'concat(DHL, ,, BARIAN) AS ship_carriers#26, 'd_year AS year#27, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jan_sales#28, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS feb_sales#29, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS mar_sales#30, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS apr_sales#31, 'sum(CASE WHEN ('d_moy = 5) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS may_sales#32, 'sum(CASE WHEN ('d_moy = 6) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jun_sales#33, 'sum(CASE WHEN ('d_moy = 7) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS jul_sales#34, 'sum(CASE WHEN ('d_moy = 8) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS aug_sales#35, 'sum(CASE WHEN ('d_moy = 9) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS sep_sales#36, 'sum(CASE WHEN ('d_moy = 10) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS oct_sales#37, 'sum(CASE WHEN ('d_moy = 11) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS nov_sales#38, 'sum(CASE WHEN ('d_moy = 12) THEN ('cs_sales_price * 'cs_quantity) ELSE 0 END) AS dec_sales#39, 'sum(CASE WHEN ('d_moy = 1) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS jan_net#40, 'sum(CASE WHEN ('d_moy = 2) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS feb_net#41, 'sum(CASE WHEN ('d_moy = 3) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS mar_net#42, 'sum(CASE WHEN ('d_moy = 4) THEN ('cs_net_paid_inc_tax * 'cs_quantity) ELSE 0 END) AS apr_net#43, ... 8 more fields]
                  +- 'Filter (((('cs_warehouse_sk = 'w_warehouse_sk) AND ('cs_sold_date_sk = 'd_date_sk)) AND (('cs_sold_time_sk = 't_time_sk) AND ('cs_ship_mode_sk = 'sm_ship_mode_sk))) AND ((('d_year = 2001) AND (('t_time >= 30838) AND ('t_time <= (30838 + 28800)))) AND 'sm_carrier IN (DHL,BARIAN)))
                     +- 'Join Inner
                        :- 'Join Inner
                        :  :- 'Join Inner
                        :  :  :- 'Join Inner
                        :  :  :  :- 'UnresolvedRelation [catalog_sales], [], false
                        :  :  :  +- 'UnresolvedRelation [warehouse], [], false
                        :  :  +- 'UnresolvedRelation [date_dim], [], false
                        :  +- 'UnresolvedRelation [time_dim], [], false
                        +- 'UnresolvedRelation [ship_mode], [], false

== Analyzed Logical Plan ==
w_warehouse_name: string, w_warehouse_sq_ft: int, w_city: string, w_county: string, w_state: string, w_country: string, ship_carriers: string, year: int, jan_sales: double, feb_sales: double, mar_sales: double, apr_sales: double, may_sales: double, jun_sales: double, jul_sales: double, aug_sales: double, sep_sales: double, oct_sales: double, nov_sales: double, dec_sales: double, jan_sales_per_sq_foot: double, feb_sales_per_sq_foot: double, mar_sales_per_sq_foot: double, apr_sales_per_sq_foot: double, ... 20 more fields
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_warehouse_name#129 ASC NULLS FIRST], true
      +- Aggregate [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1], [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, sum(jan_sales#2) AS jan_sales#52, sum(feb_sales#3) AS feb_sales#53, sum(mar_sales#4) AS mar_sales#54, sum(apr_sales#5) AS apr_sales#55, sum(may_sales#6) AS may_sales#56, sum(jun_sales#7) AS jun_sales#57, sum(jul_sales#8) AS jul_sales#58, sum(aug_sales#9) AS aug_sales#59, sum(sep_sales#10) AS sep_sales#60, sum(oct_sales#11) AS oct_sales#61, sum(nov_sales#12) AS nov_sales#62, sum(dec_sales#13) AS dec_sales#63, sum((jan_sales#2 / cast(w_warehouse_sq_ft#130 as double))) AS jan_sales_per_sq_foot#64, sum((feb_sales#3 / cast(w_warehouse_sq_ft#130 as double))) AS feb_sales_per_sq_foot#65, sum((mar_sales#4 / cast(w_warehouse_sq_ft#130 as double))) AS mar_sales_per_sq_foot#66, sum((apr_sales#5 / cast(w_warehouse_sq_ft#130 as double))) AS apr_sales_per_sq_foot#67, ... 20 more fields]
         +- SubqueryAlias x
            +- Union false, false
               :- Aggregate [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147], [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, concat(DHL, ,, BARIAN) AS ship_carriers#0, d_year#147 AS year#1, sum(CASE WHEN (d_moy#149 = 1) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS jan_sales#2, sum(CASE WHEN (d_moy#149 = 2) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS feb_sales#3, sum(CASE WHEN (d_moy#149 = 3) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS mar_sales#4, sum(CASE WHEN (d_moy#149 = 4) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS apr_sales#5, sum(CASE WHEN (d_moy#149 = 5) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS may_sales#6, sum(CASE WHEN (d_moy#149 = 6) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS jun_sales#7, sum(CASE WHEN (d_moy#149 = 7) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS jul_sales#8, sum(CASE WHEN (d_moy#149 = 8) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS aug_sales#9, sum(CASE WHEN (d_moy#149 = 9) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS sep_sales#10, sum(CASE WHEN (d_moy#149 = 10) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS oct_sales#11, sum(CASE WHEN (d_moy#149 = 11) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS nov_sales#12, sum(CASE WHEN (d_moy#149 = 12) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS dec_sales#13, sum(CASE WHEN (d_moy#149 = 1) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS jan_net#14, sum(CASE WHEN (d_moy#149 = 2) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS feb_net#15, sum(CASE WHEN (d_moy#149 = 3) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS mar_net#16, sum(CASE WHEN (d_moy#149 = 4) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE cast(0 as double) END) AS apr_net#17, ... 8 more fields]
               :  +- Filter ((((ws_warehouse_sk#108 = w_warehouse_sk#127) AND (ws_sold_date_sk#93 = d_date_sk#141)) AND ((ws_sold_time_sk#94 = t_time_sk#169) AND (ws_ship_mode_sk#107 = sm_ship_mode_sk#179))) AND (((d_year#147 = 2001) AND ((t_time#171 >= 30838) AND (t_time#171 <= (30838 + 28800)))) AND sm_carrier#183 IN (DHL,BARIAN)))
               :     +- Join Inner
               :        :- Join Inner
               :        :  :- Join Inner
               :        :  :  :- Join Inner
               :        :  :  :  :- SubqueryAlias spark_catalog.tpcds.web_sales
               :        :  :  :  :  +- Relation spark_catalog.tpcds.web_sales[ws_sold_date_sk#93,ws_sold_time_sk#94,ws_ship_date_sk#95,ws_item_sk#96,ws_bill_customer_sk#97,ws_bill_cdemo_sk#98,ws_bill_hdemo_sk#99,ws_bill_addr_sk#100,ws_ship_customer_sk#101,ws_ship_cdemo_sk#102,ws_ship_hdemo_sk#103,ws_ship_addr_sk#104,ws_web_page_sk#105,ws_web_site_sk#106,ws_ship_mode_sk#107,ws_warehouse_sk#108,ws_promo_sk#109,ws_order_number#110,ws_quantity#111,ws_wholesale_cost#112,ws_list_price#113,ws_sales_price#114,ws_ext_discount_amt#115,ws_ext_sales_price#116,... 10 more fields] parquet
               :        :  :  :  +- SubqueryAlias spark_catalog.tpcds.warehouse
               :        :  :  :     +- Relation spark_catalog.tpcds.warehouse[w_warehouse_sk#127,w_warehouse_id#128,w_warehouse_name#129,w_warehouse_sq_ft#130,w_street_number#131,w_street_name#132,w_street_type#133,w_suite_number#134,w_city#135,w_county#136,w_state#137,w_zip#138,w_country#139,w_gmt_offset#140] parquet
               :        :  :  +- SubqueryAlias spark_catalog.tpcds.date_dim
               :        :  :     +- Relation spark_catalog.tpcds.date_dim[d_date_sk#141,d_date_id#142,d_date#143,d_month_seq#144,d_week_seq#145,d_quarter_seq#146,d_year#147,d_dow#148,d_moy#149,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,... 4 more fields] parquet
               :        :  +- SubqueryAlias spark_catalog.tpcds.time_dim
               :        :     +- Relation spark_catalog.tpcds.time_dim[t_time_sk#169,t_time_id#170,t_time#171,t_hour#172,t_minute#173,t_second#174,t_am_pm#175,t_shift#176,t_sub_shift#177,t_meal_time#178] parquet
               :        +- SubqueryAlias spark_catalog.tpcds.ship_mode
               :           +- Relation spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#179,sm_ship_mode_id#180,sm_type#181,sm_code#182,sm_carrier#183,sm_contract#184] parquet
               +- Aggregate [w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239], [w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, concat(DHL, ,, BARIAN) AS ship_carriers#26, d_year#239 AS year#27, sum(CASE WHEN (d_moy#241 = 1) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS jan_sales#28, sum(CASE WHEN (d_moy#241 = 2) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS feb_sales#29, sum(CASE WHEN (d_moy#241 = 3) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS mar_sales#30, sum(CASE WHEN (d_moy#241 = 4) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS apr_sales#31, sum(CASE WHEN (d_moy#241 = 5) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS may_sales#32, sum(CASE WHEN (d_moy#241 = 6) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS jun_sales#33, sum(CASE WHEN (d_moy#241 = 7) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS jul_sales#34, sum(CASE WHEN (d_moy#241 = 8) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS aug_sales#35, sum(CASE WHEN (d_moy#241 = 9) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS sep_sales#36, sum(CASE WHEN (d_moy#241 = 10) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS oct_sales#37, sum(CASE WHEN (d_moy#241 = 11) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS nov_sales#38, sum(CASE WHEN (d_moy#241 = 12) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS dec_sales#39, sum(CASE WHEN (d_moy#241 = 1) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS jan_net#40, sum(CASE WHEN (d_moy#241 = 2) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS feb_net#41, sum(CASE WHEN (d_moy#241 = 3) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS mar_net#42, sum(CASE WHEN (d_moy#241 = 4) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE cast(0 as double) END) AS apr_net#43, ... 8 more fields]
                  +- Filter ((((cs_warehouse_sk#199 = w_warehouse_sk#219) AND (cs_sold_date_sk#185 = d_date_sk#233)) AND ((cs_sold_time_sk#186 = t_time_sk#261) AND (cs_ship_mode_sk#198 = sm_ship_mode_sk#271))) AND (((d_year#239 = 2001) AND ((t_time#263 >= 30838) AND (t_time#263 <= (30838 + 28800)))) AND sm_carrier#275 IN (DHL,BARIAN)))
                     +- Join Inner
                        :- Join Inner
                        :  :- Join Inner
                        :  :  :- Join Inner
                        :  :  :  :- SubqueryAlias spark_catalog.tpcds.catalog_sales
                        :  :  :  :  +- Relation spark_catalog.tpcds.catalog_sales[cs_sold_date_sk#185,cs_sold_time_sk#186,cs_ship_date_sk#187,cs_bill_customer_sk#188,cs_bill_cdemo_sk#189,cs_bill_hdemo_sk#190,cs_bill_addr_sk#191,cs_ship_customer_sk#192,cs_ship_cdemo_sk#193,cs_ship_hdemo_sk#194,cs_ship_addr_sk#195,cs_call_center_sk#196,cs_catalog_page_sk#197,cs_ship_mode_sk#198,cs_warehouse_sk#199,cs_item_sk#200,cs_promo_sk#201,cs_order_number#202,cs_quantity#203,cs_wholesale_cost#204,cs_list_price#205,cs_sales_price#206,cs_ext_discount_amt#207,cs_ext_sales_price#208,... 10 more fields] parquet
                        :  :  :  +- SubqueryAlias spark_catalog.tpcds.warehouse
                        :  :  :     +- Relation spark_catalog.tpcds.warehouse[w_warehouse_sk#219,w_warehouse_id#220,w_warehouse_name#221,w_warehouse_sq_ft#222,w_street_number#223,w_street_name#224,w_street_type#225,w_suite_number#226,w_city#227,w_county#228,w_state#229,w_zip#230,w_country#231,w_gmt_offset#232] parquet
                        :  :  +- SubqueryAlias spark_catalog.tpcds.date_dim
                        :  :     +- Relation spark_catalog.tpcds.date_dim[d_date_sk#233,d_date_id#234,d_date#235,d_month_seq#236,d_week_seq#237,d_quarter_seq#238,d_year#239,d_dow#240,d_moy#241,d_dom#242,d_qoy#243,d_fy_year#244,d_fy_quarter_seq#245,d_fy_week_seq#246,d_day_name#247,d_quarter_name#248,d_holiday#249,d_weekend#250,d_following_holiday#251,d_first_dom#252,d_last_dom#253,d_same_day_ly#254,d_same_day_lq#255,d_current_day#256,... 4 more fields] parquet
                        :  +- SubqueryAlias spark_catalog.tpcds.time_dim
                        :     +- Relation spark_catalog.tpcds.time_dim[t_time_sk#261,t_time_id#262,t_time#263,t_hour#264,t_minute#265,t_second#266,t_am_pm#267,t_shift#268,t_sub_shift#269,t_meal_time#270] parquet
                        +- SubqueryAlias spark_catalog.tpcds.ship_mode
                           +- Relation spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#271,sm_ship_mode_id#272,sm_type#273,sm_code#274,sm_carrier#275,sm_contract#276] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_warehouse_name#129 ASC NULLS FIRST], true
      +- Aggregate [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1], [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, sum(jan_sales#2) AS jan_sales#52, sum(feb_sales#3) AS feb_sales#53, sum(mar_sales#4) AS mar_sales#54, sum(apr_sales#5) AS apr_sales#55, sum(may_sales#6) AS may_sales#56, sum(jun_sales#7) AS jun_sales#57, sum(jul_sales#8) AS jul_sales#58, sum(aug_sales#9) AS aug_sales#59, sum(sep_sales#10) AS sep_sales#60, sum(oct_sales#11) AS oct_sales#61, sum(nov_sales#12) AS nov_sales#62, sum(dec_sales#13) AS dec_sales#63, sum((jan_sales#2 / cast(w_warehouse_sq_ft#130 as double))) AS jan_sales_per_sq_foot#64, sum((feb_sales#3 / cast(w_warehouse_sq_ft#130 as double))) AS feb_sales_per_sq_foot#65, sum((mar_sales#4 / cast(w_warehouse_sq_ft#130 as double))) AS mar_sales_per_sq_foot#66, sum((apr_sales#5 / cast(w_warehouse_sq_ft#130 as double))) AS apr_sales_per_sq_foot#67, ... 20 more fields]
         +- Union false, false
            :- Aggregate [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147], [w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, DHL,BARIAN AS ship_carriers#0, d_year#147 AS year#1, sum(CASE WHEN (d_moy#149 = 1) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS jan_sales#2, sum(CASE WHEN (d_moy#149 = 2) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS feb_sales#3, sum(CASE WHEN (d_moy#149 = 3) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS mar_sales#4, sum(CASE WHEN (d_moy#149 = 4) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS apr_sales#5, sum(CASE WHEN (d_moy#149 = 5) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS may_sales#6, sum(CASE WHEN (d_moy#149 = 6) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS jun_sales#7, sum(CASE WHEN (d_moy#149 = 7) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS jul_sales#8, sum(CASE WHEN (d_moy#149 = 8) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS aug_sales#9, sum(CASE WHEN (d_moy#149 = 9) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS sep_sales#10, sum(CASE WHEN (d_moy#149 = 10) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS oct_sales#11, sum(CASE WHEN (d_moy#149 = 11) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS nov_sales#12, sum(CASE WHEN (d_moy#149 = 12) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS dec_sales#13, sum(CASE WHEN (d_moy#149 = 1) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS jan_net#14, sum(CASE WHEN (d_moy#149 = 2) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS feb_net#15, sum(CASE WHEN (d_moy#149 = 3) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS mar_net#16, sum(CASE WHEN (d_moy#149 = 4) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END) AS apr_net#17, ... 8 more fields]
            :  +- Project [ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
            :     +- Join Inner, (ws_ship_mode_sk#107 = sm_ship_mode_sk#179)
            :        :- Project [ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
            :        :  +- Join Inner, (ws_sold_time_sk#94 = t_time_sk#169)
            :        :     :- Project [ws_sold_time_sk#94, ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
            :        :     :  +- Join Inner, (ws_sold_date_sk#93 = d_date_sk#141)
            :        :     :     :- Project [ws_sold_date_sk#93, ws_sold_time_sk#94, ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139]
            :        :     :     :  +- Join Inner, (ws_warehouse_sk#108 = w_warehouse_sk#127)
            :        :     :     :     :- Project [ws_sold_date_sk#93, ws_sold_time_sk#94, ws_ship_mode_sk#107, ws_warehouse_sk#108, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122]
            :        :     :     :     :  +- Filter ((isnotnull(ws_warehouse_sk#108) AND isnotnull(ws_sold_date_sk#93)) AND (isnotnull(ws_sold_time_sk#94) AND isnotnull(ws_ship_mode_sk#107)))
            :        :     :     :     :     +- Relation spark_catalog.tpcds.web_sales[ws_sold_date_sk#93,ws_sold_time_sk#94,ws_ship_date_sk#95,ws_item_sk#96,ws_bill_customer_sk#97,ws_bill_cdemo_sk#98,ws_bill_hdemo_sk#99,ws_bill_addr_sk#100,ws_ship_customer_sk#101,ws_ship_cdemo_sk#102,ws_ship_hdemo_sk#103,ws_ship_addr_sk#104,ws_web_page_sk#105,ws_web_site_sk#106,ws_ship_mode_sk#107,ws_warehouse_sk#108,ws_promo_sk#109,ws_order_number#110,ws_quantity#111,ws_wholesale_cost#112,ws_list_price#113,ws_sales_price#114,ws_ext_discount_amt#115,ws_ext_sales_price#116,... 10 more fields] parquet
            :        :     :     :     +- Project [w_warehouse_sk#127, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139]
            :        :     :     :        +- Filter isnotnull(w_warehouse_sk#127)
            :        :     :     :           +- Relation spark_catalog.tpcds.warehouse[w_warehouse_sk#127,w_warehouse_id#128,w_warehouse_name#129,w_warehouse_sq_ft#130,w_street_number#131,w_street_name#132,w_street_type#133,w_suite_number#134,w_city#135,w_county#136,w_state#137,w_zip#138,w_country#139,w_gmt_offset#140] parquet
            :        :     :     +- Project [d_date_sk#141, d_year#147, d_moy#149]
            :        :     :        +- Filter ((isnotnull(d_year#147) AND (d_year#147 = 2001)) AND isnotnull(d_date_sk#141))
            :        :     :           +- Relation spark_catalog.tpcds.date_dim[d_date_sk#141,d_date_id#142,d_date#143,d_month_seq#144,d_week_seq#145,d_quarter_seq#146,d_year#147,d_dow#148,d_moy#149,d_dom#150,d_qoy#151,d_fy_year#152,d_fy_quarter_seq#153,d_fy_week_seq#154,d_day_name#155,d_quarter_name#156,d_holiday#157,d_weekend#158,d_following_holiday#159,d_first_dom#160,d_last_dom#161,d_same_day_ly#162,d_same_day_lq#163,d_current_day#164,... 4 more fields] parquet
            :        :     +- Project [t_time_sk#169]
            :        :        +- Filter ((isnotnull(t_time#171) AND ((t_time#171 >= 30838) AND (t_time#171 <= 59638))) AND isnotnull(t_time_sk#169))
            :        :           +- Relation spark_catalog.tpcds.time_dim[t_time_sk#169,t_time_id#170,t_time#171,t_hour#172,t_minute#173,t_second#174,t_am_pm#175,t_shift#176,t_sub_shift#177,t_meal_time#178] parquet
            :        +- Project [sm_ship_mode_sk#179]
            :           +- Filter (sm_carrier#183 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#179))
            :              +- Relation spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#179,sm_ship_mode_id#180,sm_type#181,sm_code#182,sm_carrier#183,sm_contract#184] parquet
            +- Aggregate [w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239], [w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, DHL,BARIAN AS ship_carriers#26, d_year#239 AS year#27, sum(CASE WHEN (d_moy#241 = 1) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS jan_sales#28, sum(CASE WHEN (d_moy#241 = 2) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS feb_sales#29, sum(CASE WHEN (d_moy#241 = 3) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS mar_sales#30, sum(CASE WHEN (d_moy#241 = 4) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS apr_sales#31, sum(CASE WHEN (d_moy#241 = 5) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS may_sales#32, sum(CASE WHEN (d_moy#241 = 6) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS jun_sales#33, sum(CASE WHEN (d_moy#241 = 7) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS jul_sales#34, sum(CASE WHEN (d_moy#241 = 8) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS aug_sales#35, sum(CASE WHEN (d_moy#241 = 9) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS sep_sales#36, sum(CASE WHEN (d_moy#241 = 10) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS oct_sales#37, sum(CASE WHEN (d_moy#241 = 11) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS nov_sales#38, sum(CASE WHEN (d_moy#241 = 12) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS dec_sales#39, sum(CASE WHEN (d_moy#241 = 1) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS jan_net#40, sum(CASE WHEN (d_moy#241 = 2) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS feb_net#41, sum(CASE WHEN (d_moy#241 = 3) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS mar_net#42, sum(CASE WHEN (d_moy#241 = 4) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END) AS apr_net#43, ... 8 more fields]
               +- Project [cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                  +- Join Inner, (cs_ship_mode_sk#198 = sm_ship_mode_sk#271)
                     :- Project [cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                     :  +- Join Inner, (cs_sold_time_sk#186 = t_time_sk#261)
                     :     :- Project [cs_sold_time_sk#186, cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                     :     :  +- Join Inner, (cs_sold_date_sk#185 = d_date_sk#233)
                     :     :     :- Project [cs_sold_date_sk#185, cs_sold_time_sk#186, cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231]
                     :     :     :  +- Join Inner, (cs_warehouse_sk#199 = w_warehouse_sk#219)
                     :     :     :     :- Project [cs_sold_date_sk#185, cs_sold_time_sk#186, cs_ship_mode_sk#198, cs_warehouse_sk#199, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215]
                     :     :     :     :  +- Filter ((isnotnull(cs_warehouse_sk#199) AND isnotnull(cs_sold_date_sk#185)) AND (isnotnull(cs_sold_time_sk#186) AND isnotnull(cs_ship_mode_sk#198)))
                     :     :     :     :     +- Relation spark_catalog.tpcds.catalog_sales[cs_sold_date_sk#185,cs_sold_time_sk#186,cs_ship_date_sk#187,cs_bill_customer_sk#188,cs_bill_cdemo_sk#189,cs_bill_hdemo_sk#190,cs_bill_addr_sk#191,cs_ship_customer_sk#192,cs_ship_cdemo_sk#193,cs_ship_hdemo_sk#194,cs_ship_addr_sk#195,cs_call_center_sk#196,cs_catalog_page_sk#197,cs_ship_mode_sk#198,cs_warehouse_sk#199,cs_item_sk#200,cs_promo_sk#201,cs_order_number#202,cs_quantity#203,cs_wholesale_cost#204,cs_list_price#205,cs_sales_price#206,cs_ext_discount_amt#207,cs_ext_sales_price#208,... 10 more fields] parquet
                     :     :     :     +- Project [w_warehouse_sk#219, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231]
                     :     :     :        +- Filter isnotnull(w_warehouse_sk#219)
                     :     :     :           +- Relation spark_catalog.tpcds.warehouse[w_warehouse_sk#219,w_warehouse_id#220,w_warehouse_name#221,w_warehouse_sq_ft#222,w_street_number#223,w_street_name#224,w_street_type#225,w_suite_number#226,w_city#227,w_county#228,w_state#229,w_zip#230,w_country#231,w_gmt_offset#232] parquet
                     :     :     +- Project [d_date_sk#233, d_year#239, d_moy#241]
                     :     :        +- Filter ((isnotnull(d_year#239) AND (d_year#239 = 2001)) AND isnotnull(d_date_sk#233))
                     :     :           +- Relation spark_catalog.tpcds.date_dim[d_date_sk#233,d_date_id#234,d_date#235,d_month_seq#236,d_week_seq#237,d_quarter_seq#238,d_year#239,d_dow#240,d_moy#241,d_dom#242,d_qoy#243,d_fy_year#244,d_fy_quarter_seq#245,d_fy_week_seq#246,d_day_name#247,d_quarter_name#248,d_holiday#249,d_weekend#250,d_following_holiday#251,d_first_dom#252,d_last_dom#253,d_same_day_ly#254,d_same_day_lq#255,d_current_day#256,... 4 more fields] parquet
                     :     +- Project [t_time_sk#261]
                     :        +- Filter ((isnotnull(t_time#263) AND ((t_time#263 >= 30838) AND (t_time#263 <= 59638))) AND isnotnull(t_time_sk#261))
                     :           +- Relation spark_catalog.tpcds.time_dim[t_time_sk#261,t_time_id#262,t_time#263,t_hour#264,t_minute#265,t_second#266,t_am_pm#267,t_shift#268,t_sub_shift#269,t_meal_time#270] parquet
                     +- Project [sm_ship_mode_sk#271]
                        +- Filter (sm_carrier#275 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#271))
                           +- Relation spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#271,sm_ship_mode_id#272,sm_type#273,sm_code#274,sm_carrier#275,sm_contract#276] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#129 ASC NULLS FIRST], output=[w_warehouse_name#129,w_warehouse_sq_ft#130,w_city#135,w_county#136,w_state#137,w_country#139,ship_carriers#0,year#1,jan_sales#52,feb_sales#53,mar_sales#54,apr_sales#55,may_sales#56,jun_sales#57,jul_sales#58,aug_sales#59,sep_sales#60,oct_sales#61,nov_sales#62,dec_sales#63,jan_sales_per_sq_foot#64,feb_sales_per_sq_foot#65,mar_sales_per_sq_foot#66,apr_sales_per_sq_foot#67,... 20 more fields])
   +- HashAggregate(keys=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1], functions=[sum(jan_sales#2), sum(feb_sales#3), sum(mar_sales#4), sum(apr_sales#5), sum(may_sales#6), sum(jun_sales#7), sum(jul_sales#8), sum(aug_sales#9), sum(sep_sales#10), sum(oct_sales#11), sum(nov_sales#12), sum(dec_sales#13), sum((jan_sales#2 / cast(w_warehouse_sq_ft#130 as double))), sum((feb_sales#3 / cast(w_warehouse_sq_ft#130 as double))), sum((mar_sales#4 / cast(w_warehouse_sq_ft#130 as double))), sum((apr_sales#5 / cast(w_warehouse_sq_ft#130 as double))), sum((may_sales#6 / cast(w_warehouse_sq_ft#130 as double))), sum((jun_sales#7 / cast(w_warehouse_sq_ft#130 as double))), sum((jul_sales#8 / cast(w_warehouse_sq_ft#130 as double))), sum((aug_sales#9 / cast(w_warehouse_sq_ft#130 as double))), sum((sep_sales#10 / cast(w_warehouse_sq_ft#130 as double))), sum((oct_sales#11 / cast(w_warehouse_sq_ft#130 as double))), sum((nov_sales#12 / cast(w_warehouse_sq_ft#130 as double))), sum((dec_sales#13 / cast(w_warehouse_sq_ft#130 as double))), ... 12 more fields], output=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, jan_sales#52, feb_sales#53, mar_sales#54, apr_sales#55, may_sales#56, jun_sales#57, jul_sales#58, aug_sales#59, sep_sales#60, oct_sales#61, nov_sales#62, dec_sales#63, jan_sales_per_sq_foot#64, feb_sales_per_sq_foot#65, mar_sales_per_sq_foot#66, apr_sales_per_sq_foot#67, ... 20 more fields])
      +- Exchange hashpartitioning(w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, 200), ENSURE_REQUIREMENTS, [plan_id=243]
         +- HashAggregate(keys=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1], functions=[partial_sum(jan_sales#2), partial_sum(feb_sales#3), partial_sum(mar_sales#4), partial_sum(apr_sales#5), partial_sum(may_sales#6), partial_sum(jun_sales#7), partial_sum(jul_sales#8), partial_sum(aug_sales#9), partial_sum(sep_sales#10), partial_sum(oct_sales#11), partial_sum(nov_sales#12), partial_sum(dec_sales#13), partial_sum((jan_sales#2 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((feb_sales#3 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((mar_sales#4 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((apr_sales#5 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((may_sales#6 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((jun_sales#7 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((jul_sales#8 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((aug_sales#9 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((sep_sales#10 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((oct_sales#11 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((nov_sales#12 / cast(w_warehouse_sq_ft#130 as double))), partial_sum((dec_sales#13 / cast(w_warehouse_sq_ft#130 as double))), ... 12 more fields], output=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, sum#407, sum#408, sum#409, sum#410, sum#411, sum#412, sum#413, sum#414, sum#415, sum#416, sum#417, sum#418, sum#419, sum#420, sum#421, sum#422, ... 20 more fields])
            +- Union
               :- HashAggregate(keys=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147], functions=[sum(CASE WHEN (d_moy#149 = 1) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 2) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 3) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 4) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 5) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 6) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 7) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 8) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 9) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 10) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 11) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 12) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 1) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 2) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 3) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 4) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 5) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 6) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 7) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 8) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 9) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 10) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 11) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#149 = 12) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END)], output=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, ship_carriers#0, year#1, jan_sales#2, feb_sales#3, mar_sales#4, apr_sales#5, may_sales#6, jun_sales#7, jul_sales#8, aug_sales#9, sep_sales#10, oct_sales#11, nov_sales#12, dec_sales#13, jan_net#14, feb_net#15, mar_net#16, apr_net#17, ... 8 more fields])
               :  +- Exchange hashpartitioning(w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, 200), ENSURE_REQUIREMENTS, [plan_id=219]
               :     +- HashAggregate(keys=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147], functions=[partial_sum(CASE WHEN (d_moy#149 = 1) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 2) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 3) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 4) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 5) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 6) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 7) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 8) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 9) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 10) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 11) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 12) THEN (ws_ext_sales_price#116 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 1) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 2) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 3) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 4) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 5) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 6) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 7) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 8) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 9) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 10) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 11) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#149 = 12) THEN (ws_net_paid#122 * cast(ws_quantity#111 as double)) ELSE 0.0 END)], output=[w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, sum#467, sum#468, sum#469, sum#470, sum#471, sum#472, sum#473, sum#474, sum#475, sum#476, sum#477, sum#478, sum#479, sum#480, sum#481, sum#482, sum#483, ... 7 more fields])
               :        +- Project [ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
               :           +- BroadcastHashJoin [ws_ship_mode_sk#107], [sm_ship_mode_sk#179], Inner, BuildRight, false
               :              :- Project [ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
               :              :  +- BroadcastHashJoin [ws_sold_time_sk#94], [t_time_sk#169], Inner, BuildRight, false
               :              :     :- Project [ws_sold_time_sk#94, ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139, d_year#147, d_moy#149]
               :              :     :  +- BroadcastHashJoin [ws_sold_date_sk#93], [d_date_sk#141], Inner, BuildRight, false
               :              :     :     :- Project [ws_sold_date_sk#93, ws_sold_time_sk#94, ws_ship_mode_sk#107, ws_quantity#111, ws_ext_sales_price#116, ws_net_paid#122, w_warehouse_name#129, w_warehouse_sq_ft#130, w_city#135, w_county#136, w_state#137, w_country#139]
               :              :     :     :  +- BroadcastHashJoin [ws_warehouse_sk#108], [w_warehouse_sk#127], Inner, BuildRight, false
               :              :     :     :     :- Filter (((isnotnull(ws_warehouse_sk#108) AND isnotnull(ws_sold_date_sk#93)) AND isnotnull(ws_sold_time_sk#94)) AND isnotnull(ws_ship_mode_sk#107))
               :              :     :     :     :  +- FileScan parquet spark_catalog.tpcds.web_sales[ws_sold_date_sk#93,ws_sold_time_sk#94,ws_ship_mode_sk#107,ws_warehouse_sk#108,ws_quantity#111,ws_ext_sales_price#116,ws_net_paid#122] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#108), isnotnull(ws_sold_date_sk#93), isnotnull(ws_sold_time_sk#94), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
               :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=202]
               :              :     :     :        +- Filter isnotnull(w_warehouse_sk#127)
               :              :     :     :           +- FileScan parquet spark_catalog.tpcds.warehouse[w_warehouse_sk#127,w_warehouse_name#129,w_warehouse_sq_ft#130,w_city#135,w_county#136,w_state#137,w_country#139] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#127)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
               :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=206]
               :              :     :        +- Filter ((isnotnull(d_year#147) AND (d_year#147 = 2001)) AND isnotnull(d_date_sk#141))
               :              :     :           +- FileScan parquet spark_catalog.tpcds.date_dim[d_date_sk#141,d_year#147,d_moy#149] Batched: true, DataFilters: [isnotnull(d_year#147), (d_year#147 = 2001), isnotnull(d_date_sk#141)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=210]
               :              :        +- Project [t_time_sk#169]
               :              :           +- Filter (((isnotnull(t_time#171) AND (t_time#171 >= 30838)) AND (t_time#171 <= 59638)) AND isnotnull(t_time_sk#169))
               :              :              +- FileScan parquet spark_catalog.tpcds.time_dim[t_time_sk#169,t_time#171] Batched: true, DataFilters: [isnotnull(t_time#171), (t_time#171 >= 30838), (t_time#171 <= 59638), isnotnull(t_time_sk#169)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
               :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=214]
               :                 +- Project [sm_ship_mode_sk#179]
               :                    +- Filter (sm_carrier#183 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#179))
               :                       +- FileScan parquet spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#179,sm_carrier#183] Batched: true, DataFilters: [sm_carrier#183 IN (DHL,BARIAN), isnotnull(sm_ship_mode_sk#179)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [In(sm_carrier, [BARIAN,DHL]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
               +- HashAggregate(keys=[w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239], functions=[sum(CASE WHEN (d_moy#241 = 1) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 2) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 3) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 4) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 5) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 6) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 7) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 8) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 9) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 10) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 11) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 12) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 1) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 2) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 3) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 4) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 5) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 6) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 7) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 8) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 9) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 10) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 11) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#241 = 12) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END)], output=[w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, ship_carriers#26, year#27, jan_sales#28, feb_sales#29, mar_sales#30, apr_sales#31, may_sales#32, jun_sales#33, jul_sales#34, aug_sales#35, sep_sales#36, oct_sales#37, nov_sales#38, dec_sales#39, jan_net#40, feb_net#41, mar_net#42, apr_net#43, ... 8 more fields])
                  +- Exchange hashpartitioning(w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, 200), ENSURE_REQUIREMENTS, [plan_id=238]
                     +- HashAggregate(keys=[w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239], functions=[partial_sum(CASE WHEN (d_moy#241 = 1) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 2) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 3) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 4) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 5) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 6) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 7) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 8) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 9) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 10) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 11) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 12) THEN (cs_sales_price#206 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 1) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 2) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 3) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 4) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 5) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 6) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 7) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 8) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 9) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 10) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 11) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#241 = 12) THEN (cs_net_paid_inc_tax#215 * cast(cs_quantity#203 as double)) ELSE 0.0 END)], output=[w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, sum#515, sum#516, sum#517, sum#518, sum#519, sum#520, sum#521, sum#522, sum#523, sum#524, sum#525, sum#526, sum#527, sum#528, sum#529, sum#530, sum#531, ... 7 more fields])
                        +- Project [cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                           +- BroadcastHashJoin [cs_ship_mode_sk#198], [sm_ship_mode_sk#271], Inner, BuildRight, false
                              :- Project [cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                              :  +- BroadcastHashJoin [cs_sold_time_sk#186], [t_time_sk#261], Inner, BuildRight, false
                              :     :- Project [cs_sold_time_sk#186, cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231, d_year#239, d_moy#241]
                              :     :  +- BroadcastHashJoin [cs_sold_date_sk#185], [d_date_sk#233], Inner, BuildRight, false
                              :     :     :- Project [cs_sold_date_sk#185, cs_sold_time_sk#186, cs_ship_mode_sk#198, cs_quantity#203, cs_sales_price#206, cs_net_paid_inc_tax#215, w_warehouse_name#221, w_warehouse_sq_ft#222, w_city#227, w_county#228, w_state#229, w_country#231]
                              :     :     :  +- BroadcastHashJoin [cs_warehouse_sk#199], [w_warehouse_sk#219], Inner, BuildRight, false
                              :     :     :     :- Filter (((isnotnull(cs_warehouse_sk#199) AND isnotnull(cs_sold_date_sk#185)) AND isnotnull(cs_sold_time_sk#186)) AND isnotnull(cs_ship_mode_sk#198))
                              :     :     :     :  +- FileScan parquet spark_catalog.tpcds.catalog_sales[cs_sold_date_sk#185,cs_sold_time_sk#186,cs_ship_mode_sk#198,cs_warehouse_sk#199,cs_quantity#203,cs_sales_price#206,cs_net_paid_inc_tax#215] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#199), isnotnull(cs_sold_date_sk#185), isnotnull(cs_sold_time_sk#186), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=221]
                              :     :     :        +- Filter isnotnull(w_warehouse_sk#219)
                              :     :     :           +- FileScan parquet spark_catalog.tpcds.warehouse[w_warehouse_sk#219,w_warehouse_name#221,w_warehouse_sq_ft#222,w_city#227,w_county#228,w_state#229,w_country#231] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#219)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=225]
                              :     :        +- Filter ((isnotnull(d_year#239) AND (d_year#239 = 2001)) AND isnotnull(d_date_sk#233))
                              :     :           +- FileScan parquet spark_catalog.tpcds.date_dim[d_date_sk#233,d_year#239,d_moy#241] Batched: true, DataFilters: [isnotnull(d_year#239), (d_year#239 = 2001), isnotnull(d_date_sk#233)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=229]
                              :        +- Project [t_time_sk#261]
                              :           +- Filter (((isnotnull(t_time#263) AND (t_time#263 >= 30838)) AND (t_time#263 <= 59638)) AND isnotnull(t_time_sk#261))
                              :              +- FileScan parquet spark_catalog.tpcds.time_dim[t_time_sk#261,t_time#263] Batched: true, DataFilters: [isnotnull(t_time#263), (t_time#263 >= 30838), (t_time#263 <= 59638), isnotnull(t_time_sk#261)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=233]
                                 +- Project [sm_ship_mode_sk#271]
                                    +- Filter (sm_carrier#275 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#271))
                                       +- FileScan parquet spark_catalog.tpcds.ship_mode[sm_ship_mode_sk#271,sm_carrier#275] Batched: true, DataFilters: [sm_carrier#275 IN (DHL,BARIAN), isnotnull(sm_ship_mode_sk#271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/angela/Desktop/spark-3.5.5-bin-hadoop3/spark-warehouse/tpc..., PartitionFilters: [], PushedFilters: [In(sm_carrier, [BARIAN,DHL]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>

Time taken: 3.727 seconds, Fetched 1 row(s)
